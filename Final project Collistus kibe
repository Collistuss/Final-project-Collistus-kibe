import csv
import os
from colorama import Fore, Style, init
import matplotlib.pyplot as plt

# Initialize Colorama
init(autoreset=True)

# File to save historical records
FILE_NAME = "farm_records.csv"

# Initialize records
expenses = []
income = []
budget = 0

# Load existing data if available
if os.path.exists(FILE_NAME):
    with open(FILE_NAME, "r") as file:
        reader = csv.reader(file)
        next(reader)  # Skip header
        for row in reader:
            if row[0] == "Expense":
                expenses.append((row[1], float(row[2])))
            elif row[0] == "Income":
                income.append((row[1], float(row[2])))

def save_to_file():
    """Save current records to a CSV file."""
    with open(FILE_NAME, "w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["Type", "Category", "Amount"])
        for desc, amount in expenses:
            writer.writerow(["Expense", desc, amount])
        for desc, amount in income:
            writer.writerow(["Income", desc, amount])

def visualize_data():
    """Generate visual reports for expenses and income."""
    expense_categories = [desc for desc, _ in expenses]
    expense_amounts = [amount for _, amount in expenses]

    income_categories = [desc for desc, _ in income]
    income_amounts = [amount for _, amount in income]

    if expense_amounts:
        # Pie chart for expenses
        plt.figure(figsize=(10, 5))
        plt.pie(expense_amounts, labels=expense_categories, autopct='%1.1f%%', startangle=140)
        plt.title("Expenses Breakdown")
        plt.show()

    if income_amounts:
        # Bar chart for income
        plt.figure(figsize=(10, 5))
        plt.bar(income_categories, income_amounts, color='green')
        plt.title("Income Breakdown")
        plt.xlabel("Categories")
        plt.ylabel("Amount (KES)")
        plt.show()

def main():
    print(Fore.CYAN + Style.BRIGHT + "Welcome to the Farm Expense and Profit Calculator!")
    global budget

    while True:
        print(Fore.YELLOW + "\nMenu:")
        print(Fore.GREEN + "1. Set Monthly Budget")
        print(Fore.RED + "2. Add Expense")
        print(Fore.BLUE + "3. Add Income")
        print(Fore.MAGENTA + "4. View Summary")
        print(Fore.CYAN + "5. Visualize Data")
        print(Fore.RED + "6. Exit")

        choice = input(Fore.CYAN + "Enter your choice (1-6): ")

        if choice == "1":
            budget = float(input(Fore.GREEN + "Set your monthly budget (KES): "))
            print(Fore.GREEN + f"Budget set to KES {budget}!")

        elif choice == "2":
            print(Fore.YELLOW + "\n--- Add Expense ---")
            expense = float(input(Fore.RED + "Enter expense amount (KES): "))
            description = input(Fore.RED + "Enter expense category (e.g., seeds, labor): ")
            expenses.append((description, expense))
            print(Fore.GREEN + "Expense added successfully!")

            # Check if budget is exceeded
            total_expenses = sum(amount for _, amount in expenses)
            if budget and total_expenses > budget:
                print(Fore.RED + f"Warning: You have exceeded your budget of KES {budget}!")

        elif choice == "3":
            print(Fore.YELLOW + "\n--- Add Income ---")
            income_amount = float(input(Fore.BLUE + "Enter income amount (KES): "))
            source = input(Fore.BLUE + "Enter income category (e.g., maize sales): ")
            income.append((source, income_amount))
            print(Fore.GREEN + "Income added successfully!")

        elif choice == "4":
            print(Fore.CYAN + "\n--- Summary ---")
            print(Fore.YELLOW + "Expenses:")
            total_expenses = 0
            for desc, amount in expenses:
                print(Fore.RED + f"  - {desc}: KES {amount}")
                total_expenses += amount

            print(Fore.YELLOW + "\nIncome:")
            total_income = 0
            for source, amount in income:
                print(Fore.BLUE + f"  - {source}: KES {amount}")
                total_income += amount

            profit = total_income - total_expenses
            print(Fore.GREEN + f"\nTotal Expenses: KES {total_expenses}")
            print(Fore.GREEN + f"Total Income: KES {total_income}")
            if profit >= 0:
                print(Fore.GREEN + f"Net Profit: KES {profit}")
            else:
                print(Fore.RED + f"Net Loss: KES {profit}")

        elif choice == "5":
            visualize_data()

        elif choice == "6":
            print(Fore.MAGENTA + "Saving records and exiting the app. Goodbye!")
            save_to_file()
            break

        else:
            print(Fore.RED + "Invalid choice. Please try again.")

if __name__ == "__main__":
    main()

